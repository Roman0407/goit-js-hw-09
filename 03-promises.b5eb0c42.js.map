{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAE9BC,EAAS,CACbC,MAAO,EACPC,KAAM,EACNC,OAAQ,EACRC,QAAS,GAuBX,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAS,CACbC,SAAAT,EACAL,MAAAM,GAGEC,EACFI,EAAQE,GAERD,EAAOC,E,IAKRE,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUd,EAAKgB,EAALhB,MACjBiB,YACE,W,OAAMvB,EAAAwB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANpB,EAAM,M,GACjEA,E,IAGLqB,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUd,EAAKgB,EAALhB,MAClBiB,YACE,W,OAAMvB,EAAAwB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANpB,EAAM,M,GAChEA,E,IA9CRJ,EAAK2B,iBACH,SACA,SAAAC,G,OAAUzB,EAAOyB,EAAMC,OAAOC,OAASF,EAAMC,OAAOE,K,IAGtD/B,EAAK2B,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMI,iBAGN,IAFA,IAAIC,EAAW9B,EAAOC,MAEb8B,EAAI,EAAGA,EAAI/B,EAAOG,OAAQ4B,IACjCC,QAAQC,IAAIH,GACZE,QAAQC,IAAIjC,EAAOC,OACnBI,EAAcL,EAAOI,QAAS0B,GAC9B9B,EAAOI,SAAW,EAClB0B,GAAY9B,EAAOE,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nconst inputs = {\n  delay: 0,\n  step: 0,\n  amount: 0,\n  positon: 0,\n};\n\nform.addEventListener(\n  'input',\n  event => (inputs[event.target.name] = +event.target.value)\n);\n\nform.addEventListener('submit', startTimer);\n\nfunction startTimer(event) {\n  event.preventDefault();\n  let newDelay = inputs.delay;\n\n  for (let i = 0; i < inputs.amount; i++) {\n    console.log(newDelay);\n    console.log(inputs.delay);\n    createPromise(inputs.positon, newDelay);\n    inputs.positon += 1;\n    newDelay += inputs.step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    const result = {\n      position,\n      delay,\n    };\n\n    if (shouldResolve) {\n      resolve(result);\n    } else {\n      reject(result);\n    }\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      setTimeout(\n        () => Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`),\n        delay\n      );\n    })\n    .catch(({ position, delay }) => {\n      setTimeout(\n        () => Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`),\n        delay\n      );\n    });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputs","delay","step","amount","positon","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","result","position","then","param","setTimeout","Notify","success","concat","catch","failure","addEventListener","event","target","name","value","preventDefault","newDelay","i","console","log"],"version":3,"file":"03-promises.b5eb0c42.js.map"}